// Code generated by MockGen. DO NOT EDIT.
// Source: internal/data/wholesaledata/models.go

// Package mocks is a generated GoMock package.
package mocks

import (
	wholesaledata "mssql-service/internal/data/wholesaledata"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImgCdrOperatorRoutingDataInterface is a mock of ImgCdrOperatorRoutingDataInterface interface.
type MockImgCdrOperatorRoutingDataInterface struct {
	ctrl     *gomock.Controller
	recorder *MockImgCdrOperatorRoutingDataInterfaceMockRecorder
}

// MockImgCdrOperatorRoutingDataInterfaceMockRecorder is the mock recorder for MockImgCdrOperatorRoutingDataInterface.
type MockImgCdrOperatorRoutingDataInterfaceMockRecorder struct {
	mock *MockImgCdrOperatorRoutingDataInterface
}

// NewMockImgCdrOperatorRoutingDataInterface creates a new mock instance.
func NewMockImgCdrOperatorRoutingDataInterface(ctrl *gomock.Controller) *MockImgCdrOperatorRoutingDataInterface {
	mock := &MockImgCdrOperatorRoutingDataInterface{ctrl: ctrl}
	mock.recorder = &MockImgCdrOperatorRoutingDataInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImgCdrOperatorRoutingDataInterface) EXPECT() *MockImgCdrOperatorRoutingDataInterfaceMockRecorder {
	return m.recorder
}

// GetFirstImgCdrOperatorRoutingByNumber mocks base method.
func (m *MockImgCdrOperatorRoutingDataInterface) GetFirstImgCdrOperatorRoutingByNumber(number string) (wholesaledata.ImgCdrOperatorRoutingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstImgCdrOperatorRoutingByNumber", number)
	ret0, _ := ret[0].(wholesaledata.ImgCdrOperatorRoutingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFirstImgCdrOperatorRoutingByNumber indicates an expected call of GetFirstImgCdrOperatorRoutingByNumber.
func (mr *MockImgCdrOperatorRoutingDataInterfaceMockRecorder) GetFirstImgCdrOperatorRoutingByNumber(number interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstImgCdrOperatorRoutingByNumber", reflect.TypeOf((*MockImgCdrOperatorRoutingDataInterface)(nil).GetFirstImgCdrOperatorRoutingByNumber), number)
}

// MockOptimalRouteDataInterface is a mock of OptimalRouteDataInterface interface.
type MockOptimalRouteDataInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOptimalRouteDataInterfaceMockRecorder
}

// MockOptimalRouteDataInterfaceMockRecorder is the mock recorder for MockOptimalRouteDataInterface.
type MockOptimalRouteDataInterfaceMockRecorder struct {
	mock *MockOptimalRouteDataInterface
}

// NewMockOptimalRouteDataInterface creates a new mock instance.
func NewMockOptimalRouteDataInterface(ctrl *gomock.Controller) *MockOptimalRouteDataInterface {
	mock := &MockOptimalRouteDataInterface{ctrl: ctrl}
	mock.recorder = &MockOptimalRouteDataInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOptimalRouteDataInterface) EXPECT() *MockOptimalRouteDataInterfaceMockRecorder {
	return m.recorder
}

// ExecuteGetOptimalRoute mocks base method.
func (m *MockOptimalRouteDataInterface) ExecuteGetOptimalRoute(pCallString string) (wholesaledata.OptimalRouteData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecuteGetOptimalRoute", pCallString)
	ret0, _ := ret[0].(wholesaledata.OptimalRouteData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExecuteGetOptimalRoute indicates an expected call of ExecuteGetOptimalRoute.
func (mr *MockOptimalRouteDataInterfaceMockRecorder) ExecuteGetOptimalRoute(pCallString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteGetOptimalRoute", reflect.TypeOf((*MockOptimalRouteDataInterface)(nil).ExecuteGetOptimalRoute), pCallString)
}

// MockInternalCodemappingDataInterface is a mock of InternalCodemappingDataInterface interface.
type MockInternalCodemappingDataInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInternalCodemappingDataInterfaceMockRecorder
}

// MockInternalCodemappingDataInterfaceMockRecorder is the mock recorder for MockInternalCodemappingDataInterface.
type MockInternalCodemappingDataInterfaceMockRecorder struct {
	mock *MockInternalCodemappingDataInterface
}

// NewMockInternalCodemappingDataInterface creates a new mock instance.
func NewMockInternalCodemappingDataInterface(ctrl *gomock.Controller) *MockInternalCodemappingDataInterface {
	mock := &MockInternalCodemappingDataInterface{ctrl: ctrl}
	mock.recorder = &MockInternalCodemappingDataInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalCodemappingDataInterface) EXPECT() *MockInternalCodemappingDataInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockInternalCodemappingDataInterface) Delete(internalCode int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", internalCode)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockInternalCodemappingDataInterfaceMockRecorder) Delete(internalCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockInternalCodemappingDataInterface)(nil).Delete), internalCode)
}

// GetAll mocks base method.
func (m *MockInternalCodemappingDataInterface) GetAll() ([]wholesaledata.InternalCodemappingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]wholesaledata.InternalCodemappingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockInternalCodemappingDataInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockInternalCodemappingDataInterface)(nil).GetAll))
}

// Set mocks base method.
func (m *MockInternalCodemappingDataInterface) Set(input wholesaledata.InternalCodemappingData) (wholesaledata.InternalCodemappingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", input)
	ret0, _ := ret[0].(wholesaledata.InternalCodemappingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set.
func (mr *MockInternalCodemappingDataInterfaceMockRecorder) Set(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockInternalCodemappingDataInterface)(nil).Set), input)
}
