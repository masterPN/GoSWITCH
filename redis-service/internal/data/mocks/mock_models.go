// Code generated by MockGen. DO NOT EDIT.
// Source: internal/data/models.go

// Package mocks is a generated GoMock package.
package mocks

import (
	data "redis-service/internal/data"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRadiusAccountingDataInterface is a mock of RadiusAccountingDataInterface interface.
type MockRadiusAccountingDataInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRadiusAccountingDataInterfaceMockRecorder
}

// MockRadiusAccountingDataInterfaceMockRecorder is the mock recorder for MockRadiusAccountingDataInterface.
type MockRadiusAccountingDataInterfaceMockRecorder struct {
	mock *MockRadiusAccountingDataInterface
}

// NewMockRadiusAccountingDataInterface creates a new mock instance.
func NewMockRadiusAccountingDataInterface(ctrl *gomock.Controller) *MockRadiusAccountingDataInterface {
	mock := &MockRadiusAccountingDataInterface{ctrl: ctrl}
	mock.recorder = &MockRadiusAccountingDataInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRadiusAccountingDataInterface) EXPECT() *MockRadiusAccountingDataInterfaceMockRecorder {
	return m.recorder
}

// Pop mocks base method.
func (m *MockRadiusAccountingDataInterface) Pop(anino string) (data.RadiusAccountingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pop", anino)
	ret0, _ := ret[0].(data.RadiusAccountingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pop indicates an expected call of Pop.
func (mr *MockRadiusAccountingDataInterfaceMockRecorder) Pop(anino interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pop", reflect.TypeOf((*MockRadiusAccountingDataInterface)(nil).Pop), anino)
}

// Set mocks base method.
func (m *MockRadiusAccountingDataInterface) Set(input data.RadiusAccountingData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", input)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockRadiusAccountingDataInterfaceMockRecorder) Set(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockRadiusAccountingDataInterface)(nil).Set), input)
}

// MockInternalCodemappingDataInterface is a mock of InternalCodemappingDataInterface interface.
type MockInternalCodemappingDataInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInternalCodemappingDataInterfaceMockRecorder
}

// MockInternalCodemappingDataInterfaceMockRecorder is the mock recorder for MockInternalCodemappingDataInterface.
type MockInternalCodemappingDataInterfaceMockRecorder struct {
	mock *MockInternalCodemappingDataInterface
}

// NewMockInternalCodemappingDataInterface creates a new mock instance.
func NewMockInternalCodemappingDataInterface(ctrl *gomock.Controller) *MockInternalCodemappingDataInterface {
	mock := &MockInternalCodemappingDataInterface{ctrl: ctrl}
	mock.recorder = &MockInternalCodemappingDataInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalCodemappingDataInterface) EXPECT() *MockInternalCodemappingDataInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockInternalCodemappingDataInterface) Delete(internalCode int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", internalCode)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockInternalCodemappingDataInterfaceMockRecorder) Delete(internalCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockInternalCodemappingDataInterface)(nil).Delete), internalCode)
}

// Get mocks base method.
func (m *MockInternalCodemappingDataInterface) Get(internalCode int) (data.InternalCodemappingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", internalCode)
	ret0, _ := ret[0].(data.InternalCodemappingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockInternalCodemappingDataInterfaceMockRecorder) Get(internalCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInternalCodemappingDataInterface)(nil).Get), internalCode)
}

// Set mocks base method.
func (m *MockInternalCodemappingDataInterface) Set(input data.InternalCodemappingData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", input)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockInternalCodemappingDataInterfaceMockRecorder) Set(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockInternalCodemappingDataInterface)(nil).Set), input)
}
